name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, macos-latest]
        compiler: [gcc]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - uses: actions/cache@v4
      with:
        path: |
          /home/runner/.ccache
          /home/runner/.cache/ccache
          /Users/runner/Library/Caches/ccache
        key: ccache:${{ matrix.os }}:${{ github.sha }}
        restore-keys: 'ccache:${{ matrix.os }}:'
    - name: install deps
      if: ${{ runner.os == 'Linux' }}
      run: |
        echo deb https://psha.org.ru/debian/ `echo ${{ matrix.os }} | tr -d -` contrib backports | sudo tee /etc/apt/sources.list.d/psha.org.ru.list
        sudo wget -O/etc/apt/trusted.gpg.d/psha.org.ru.gpg https://psha.org.ru/debian/pubkey.gpg
        sudo apt update
        sudo apt install ccache cmake meson pkg-config libfmt-dev libyaml-dev zlib1g-dev liblz4-dev libspdlog-dev rapidjson-dev libgtest-dev googletest librhash-dev python3-dev python3-pytest python3-yaml python3-lz4 python3-decorator

        python3 -m venv venv --system-site-packages
        . venv/bin/activate
        echo "$VIRTUAL_ENV/bin" >> "$GITHUB_PATH"
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> "$GITHUB_ENV"

        pip install cython

    - name: install deps macos
      if: ${{ runner.os == 'macOS' }}
      run: |
        brew install ccache meson fmt spdlog rapidjson rhash googletest

        python3 -m venv venv
        . venv/bin/activate
        echo "$VIRTUAL_ENV/bin" >> "$GITHUB_PATH"
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> "$GITHUB_ENV"

        pip install cython setuptools pytest pyyaml lz4 decorator

    - name: configure
#      env:
#        CC: ccache ${{ matrix.compiler }}
#        CXX: ccache ${{ matrix.compiler }} -xc++
      run: meson build
    - name: build
      run: ninja -vC build -j2
    - name: pybuild
      run: |
        cd python
        python3 setup.py build_ext --inplace --library-dirs=../build/src --rpath=`pwd`/../build/src
    - name: test
      continue-on-error: ${{ runner.os == 'macOS' }}
      run: |
        meson test -C build --no-rebuild --print-errorlogs -v
        cd python
        python3 -m pytest --log-level=DEBUG -v

# vim: sts=2 sw=2 et
